{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","query","filterValue","setSelectedTodo","selectedTodo","findedTodos","filter","todo","filterResult","All","Active","completed","Completed","title","toLowerCase","includes","trim","className","map","cn","id","type","onClick","openModalWindow","TodoFilter","handleFoundTodos","setFilterValue","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userId","useState","name","user","setUser","useEffect","getUser","userResp","href","App","loader","setLoader","AllTodos","setAllTodods","finally","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bcc929d.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  todos: Todo[],\n  query: string\n  filterValue: string,\n  setSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  query,\n  filterValue,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const findedTodos = todos.filter(todo => {\n    let filterResult;\n\n    if (filterValue === Status.All) {\n      filterResult = true;\n    } else if (filterValue === Status.Active) {\n      filterResult = todo.completed === false;\n    } else if (filterValue === Status.Completed) {\n      filterResult = todo.completed === true;\n    }\n\n    return (\n      todo.title.toLowerCase().includes(query.trim().toLowerCase())\n      && filterResult);\n  });\n\n  const openModalWindow = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {findedTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={cn('', { 'has-background-info-light': false })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed === true && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': todo.completed === false,\n                'has-text-success': todo.completed === true,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => openModalWindow(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far',\n                    {\n                      'fa-eye': selectedTodo.id !== todo.id,\n                      'fa-eye-slash': selectedTodo.id === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string,\n  handleFoundTodos: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  setFilterValue: (str: string) => void,\n  filterValue: string,\n  setQuery: (str: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  handleFoundTodos,\n  setFilterValue,\n  filterValue,\n  setQuery,\n}) => {\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterValue}\n            onChange={(event) => setFilterValue(event.target.value)}\n          >\n            <option\n              value={Status.All}\n            >\n              All\n            </option>\n            <option\n              value={Status.Active}\n            >\n              Active\n            </option>\n            <option\n              value={Status.Completed}\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleFoundTodos}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <label>\n            {query && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                aria-labelledby=\"button-label\"\n                onClick={clearQuery}\n              />\n            )}\n          </label>\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = selectedTodo;\n  const [user, setUser] = useState({ id: 0, name: '' });\n\n  const closeModalWindow = () => {\n    setSelectedTodo({\n      id: 0,\n      title: '',\n      completed: false,\n      userId: 0,\n    });\n  };\n\n  useEffect(() => {\n    getUser(userId).then((userResp) => setUser(userResp));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user.id ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModalWindow}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed === true ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [loader, setLoader] = useState(false);\n  const [AllTodos, setAllTodods] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filterValue, setFilterValue] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState({\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n\n  useEffect(() => {\n    setLoader(true);\n    getTodos()\n      .then(setAllTodods)\n      .finally(() => setLoader(false));\n  }, []);\n\n  const handleFoundTodos = (event: React.ChangeEvent<HTMLInputElement>) => setQuery(event.target.value);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                handleFoundTodos={handleFoundTodos}\n                setFilterValue={setFilterValue}\n                filterValue={filterValue}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader && (\n                <Loader />\n              )}\n\n              {!loader && AllTodos.length > 0 && (\n                <TodoList\n                  todos={AllTodos}\n                  query={query}\n                  filterValue={filterValue}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo.id && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}